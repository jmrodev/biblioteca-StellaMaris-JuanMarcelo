{
  "name": "biblioteca-stellamaris-juanmarcelo",
  "version": "1.0.0",
  "description": "Incorporate Objects and functions files ",
  "main": "index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/jmrodev/biblioteca-StellaMaris-JuanMarcelo.git"
  },
  "keywords": [
    "TECDA",
    "Programacion",
    "Objetos",
    "Funciones",
    "JavaScript",
    "NodeJs"
  ],
  "author": "Stella Maris Ibarra,Juan Marcelo Rodriguez",
  "license": "ISC",
  "bugs": {
    "url": "https://github.com/jmrodev/biblioteca-StellaMaris-JuanMarcelo/issues"
  },
  "homepage": "https://github.com/jmrodev/biblioteca-StellaMaris-JuanMarcelo#readme"
}

{
  "name": "biblioteca-stellamaris-juanmarcelo",
  "version": "1.0.0",
  "description": "1. Realiza un programa que permita cargar, editar y eliminar información de diferentes elementos los cuales estarán relacionados entre ellos. Además el programa deberá realizar las funcionalidades expresadas en el enunciado de cada sistema. Evalúa y analiza que datos serán necesarios almacenar en cada elemento. 2. El trabajo puede ser realizado en grupo con un máximo de 3 integrantes y se otorgará una lista de posibles programas a realizar en donde cada grupo deberá inscribirse para realizarlo. 3. El código será realizado en repositorio github donde deberá constar los commits realizados por cada uno de los integrantes del grupo. No se aceptarán repositorios que posean pocos commits o realizados por solo alguno de los integrantes del grupo. El enlace del repositorio deberá publicarse en la planilla donde se seleccionó el trabajo. 4. La fecha de entrega del trabajo es el viernes 25 de octubre, por lo que no se tendrán en cuenta commits al repositorio luego de esa fecha. La defensa de los trabajos se repartirán entre los días 29 y 31, donde mediante sorteo el día de clase se definirá que grupos exponen cada día. 5. Durante la defensa deberán explicar brevemente lo realizado y se les propondrá realizar una mejora durante la clase la cual deberán subir al repositorio antes de finalizada la misma. Cada integrante del grupo debe demostrar conocimiento del código realizado. 6. Los que logren una nota 7 o más promocionará la materia (no rendirán final), incluso si no aprobó el primer cuatrimestre (siempre y cuando se haya presentado a algún exámen). La nota de final se considerará como promedio de los cuatrimestres. Si el alumno que promociona y haya desaprobado el 1er cuatrimestre desea tener mayor nota podrá optar por rendir final regularmente (deberá manifestarlo con anterioridad a la mesa de examen). Los que no cumplan los objetivos de aprobación tendrán una instancia de recuperatorio durante los días 5 o 7 de noviembre con modalidad a definir. Para la realización de los programas recuerda modularizar correctamente el código utilizando funciones y declarando las variables necesarias de forma más localmente posible. Intenta utilizar las estructuras de datos más adecuadas para garantizar un programa escalable fácilmente. Además, ten en cuenta de agrupar las funcionalidades en diferentes archivos javascript e importando las distintas funcionalidades según sean necesarias.",
  "main": "index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "keywords": [],
  "author": "",
  "license": "ISC",
  "dependencies": {
    "prompt-sync": "^4.2.0"
  }
}
